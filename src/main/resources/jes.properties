jes.jdbc.schema-name=es
# statements section:
# event store
jes.jdbc.statement.select-events=SELECT id, data FROM event_store WHERE id > ? ORDER BY id
jes.jdbc.statement.select-events-by-uuid=SELECT id, data FROM event_store WHERE uuid = ? ORDER BY id
jes.jdbc.statement.select-events-version=SELECT count(*) FROM event_store WHERE uuid = ?
jes.jdbc.statement.select-events-by-uuid-with-skip=SELECT id, data FROM event_store WHERE uuid = ? ORDER BY id OFFSET ?
jes.jdbc.statement.insert-events=INSERT INTO event_store (uuid, data) VALUES (?, ?)
jes.jdbc.statement.delete-events=DELETE FROM event_store WHERE uuid = ?
# aggregate store
jes.jdbc.statement.select-aggregate=SELECT data FROM snapshot_store WHERE uuid = ?
jes.jdbc.statement.insert-aggregate=INSERT INTO snapshot_store (data, uuid) VALUES (?, ?)
jes.jdbc.statement.update-aggregate=UPDATE snapshot_store SET data = ? WHERE uuid = ?
jes.jdbc.statement.delete-aggregate=DELETE FROM snapshot_store WHERE uuid = ?
jes.jdbc.statement.exists-aggregate=SELECT EXISTS(SELECT 1 FROM snapshot_store WHERE uuid = ?)
# offsets
jes.jdbc.statement.select-offset=SELECT value FROM offsets WHERE key = ?
jes.jdbc.statement.insert-offset=INSERT INTO offsets (key) VALUES (?)
jes.jdbc.statement.update-offset-and-increment=UPDATE offsets SET value = value + 1 WHERE key = ?
jes.jdbc.statement.update-offset-and-add=UPDATE offsets SET value = value + ? WHERE key = ?
jes.jdbc.statement.update-offset-and-reset=UPDATE offsets SET value = 0 WHERE key = ?
# locks
jes.jdbc.statement.insert-lock=INSERT INTO locks (key) VALUES (?)
jes.jdbc.statement.delete-lock=DELETE FROM locks WHERE key = ?
# end of statements section